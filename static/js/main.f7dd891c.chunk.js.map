{"version":3,"sources":["BeanEater.gif","components/Loader.js","components/newslist/newslist.js","components/searchbar/searchbar.js","App.js","reportWebVitals.js","index.js"],"names":["Loader","className","src","Gif","alt","NewsList","news","isLoading","length","map","newItem","href","url","target","title","objectID","Searchbar","search","useState","inputValue","setInputValue","id","method","type","value","onChange","placeholder","Button","variant","onClick","App","setNews","searchQuery","setSearchQuery","setLoading","useEffect","fetchNews","a","axios","get","then","response","data","hits","alert","error","interval","setInterval","clearInterval","Show","name","displayNumber","previousText","nextText","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8TAAe,G,kBAAA,IAA0B,uC,OCI1B,SAASA,IACtB,OACE,qBAAKC,UAAU,SAAf,SACA,qBAAKC,IAAKC,EAAKC,IAAI,iB,MCFR,SAASC,EAAT,GAAwC,IAApBC,EAAmB,EAAnBA,KAClC,OADqD,EAAbC,UAEvC,cAAC,EAAD,IAEA,8BACC,6BACiB,IAAhBD,EAAKE,QAAgBF,EAAKG,KAAI,SAACC,GAAD,OAC9B,6BACA,mBAAGC,KAAMD,EAAQE,IAAKC,OAAO,SAA7B,SACC,oBAAIZ,UAAU,QAAd,SAAuBS,EAAQI,WAFvBJ,EAAQK,iB,kBCPN,SAASC,EAAT,GAA8B,IAAVC,EAAS,EAATA,OAEjC,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAMA,OACE,qBAAKC,GAAG,YAAR,SACA,uBACAC,OAAO,OADP,UAEA,qBAAKrB,UAAU,aAAf,SACA,uBACCsB,KAAK,SACLC,MAAOL,EACPM,SAZH,YAAqC,IAAVZ,EAAS,EAATA,OACzBO,EAAcP,EAAOW,QAYpBE,YAAY,gCAGb,cAACC,EAAA,EAAD,CACEC,QAAQ,OAAO3B,UAAU,SACxB4B,QAAS,kBAAMZ,EAAOE,IAFzB,6B,qBCiDWW,MAhEf,WACA,MAAwBZ,mBAAS,IAAjC,mBAAOZ,EAAP,KAAayB,EAAb,KACA,EAAsCb,mBAAS,SAA/C,mBAAOc,EAAP,KAAoBC,EAApB,KACA,EAAgCf,oBAAS,GAAzC,mBAAOX,EAAP,KAAkB2B,EAAlB,KAuCE,OArCFC,qBAAU,WAAO,SACAC,IADD,2EACd,sBAAAC,EAAA,sDACA,IACIC,IAAMC,IAAN,oDAAuDP,EAAvD,gBAAiFQ,MAAK,SAACC,GACvF,IAAMC,EAAOD,EAASC,KAAKC,KACP,IAAhBD,EAAKlC,QACLoC,MAAM,aACNV,GAAW,KAEXH,EAAQW,GACRR,GAAW,OAGjB,MAAMW,GACFD,MAAM,cAbZ,4CADc,sBAiBdR,IAEA,IAAMU,EAASC,aAAY,WACzBX,MACA,KAED,OAAM,kBAAIY,cAAcF,MAErB,CAACd,IAaH,gCACA,oBAAI/B,UAAU,OAAd,yBACA,2CACA,cAACe,EAAD,CACIC,OAfN,SAAsBE,GACrBc,EAAed,MAgBd,cAAC,EAAD,CACIZ,UAAWA,EACXD,KAAMA,IAEV,cAAC,IAAD,CACEoC,KAAMpC,EACN2C,KAnBO,SAACzB,GAAD,OACT,oBAAmBvB,UAAU,OAA7B,SACI,+BAAOuB,EAAM0B,QADR1B,EAAMH,KAmBb8B,cAAc,IACdC,aAAa,OACbC,SAAS,aCxDAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f7dd891c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/BeanEater.a9f85f3c.gif\";","import React from 'react';\r\nimport './Loader.css';\r\nimport Gif from '../BeanEater.gif'\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div className='loader'>\r\n    <img src={Gif} alt='Bean Eater' />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './newslist.css';\r\nimport Loader from '../Loader.js';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default function NewsList( {news, isLoading} ) {\r\n\treturn isLoading ? (\r\n\t\t<Loader />\r\n\t) : (\r\n\t\t<div>\r\n\t\t\t<ul>\r\n\t\t\t{news.length !== 0 && news.map((newItem) => (\r\n\t\t\t\t<li key={newItem.objectID}>\r\n\t\t\t\t<a href={newItem.url} target='_blank'>\r\n\t\t\t\t\t<h3 className=\"title\">{newItem.title}</h3>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useState } from 'react';\nimport './searchbar.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Form, Button } from 'react-bootstrap';\n\nexport default function Searchbar({search}) {\n\n  const [inputValue, setInputValue] = useState('');\n\n  function handleInputValue({target}) {\n    setInputValue(target.value);\n  }\n\n  return (\n    <div id=\"searchbar\">\n    <form\n    method=\"post\">\n    <div className=\"form-group\">\n    <input\n     type='search'\n     value={inputValue}\n     onChange={handleInputValue}\n     placeholder='What are you looking for?'>\n     </input>\n     </div>\n    <Button\n      variant=\"dark\" className=\"button\"\n       onClick={() => search(inputValue)}>\n       Let's go! </Button>\n       </form>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Newslist from \"./components/newslist/newslist\";\nimport Searchbar from \"./components/searchbar/searchbar\";\n//import ReactPaginate from 'react-paginate';\nimport Pagination from 'pagination-react-hooks';\n//import Pagination from \"./components/pagination/pagination.js\";\n\n\nfunction App() {\nconst [news, setNews] = useState([]);\nconst [searchQuery, setSearchQuery] = useState('react');\nconst [isLoading, setLoading] = useState(true);\n\nuseEffect(() => {\n  async function fetchNews() {\n  try {\n      axios.get(`http://hn.algolia.com/api/v1/search?query=${searchQuery}&tags=story`).then((response) => {\n      const data = response.data.hits;\n      if (data.length === 0) {\n          alert('No match!');\n          setLoading(false);\n        } else {\n          setNews(data);\n          setLoading(false);\n      };\n    });\n  } catch(error) {\n        alert('No results')\n      }}\n\n  fetchNews();\n\n  const interval=setInterval(()=>{\n    fetchNews()\n  },50000)\n\n   return()=>clearInterval(interval)\n\n   }, [searchQuery]);\n\n  function handleSearch(inputValue) {\r\n   setSearchQuery(inputValue);\r\n };\n\nconst show = (value) => (\n    <li key={value.id} className=\"card\">\n        <span>{value.name}</span>\n    </li>\n)\n\n  return (\n    <div>\n    <h1 className=\"name\">Hacker News</h1>\n    <h4>The Clone</h4>\n    <Searchbar\n        search={handleSearch}\n        />\n    <Newslist\n        isLoading={isLoading}\n        news={news}\n    />\n    <Pagination\n      data={news}\n      Show={show}\n      displayNumber=\"7\"\n      previousText=\"Prev\"\n      nextText=\"Next\"\n    />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}